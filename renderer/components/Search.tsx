import { useContext, useRef, useState } from "react";
import { addDoc, collection, getDocs, query, where } from "firebase/firestore";
import { db } from "../pages/_app";
import { AuthContext } from "../contexts/AuthContext";

function Search({ chats }) {
  // Í≤ÄÏÉâÌïú Ïù¥Î©îÏùº
  const [inputemail, setInputemail] = useState("");
  // Í≤ÄÏÉâ ÌõÑ Ï∂úÎ†•Îêú Ïù¥Î©îÏùº
  const [resultuser, setRsultUser] = useState(null);
  // ÌòÑÏû¨ Ï†ëÏÜçÏ§ëÏù∏ Ïú†Ï†Ä
  const { currentUser } = useContext(AuthContext);
  const inputRef = useRef(null);
  const [errMsg, setErrMsg] = useState("");

  // Ïú†Ï†Ä Í≤ÄÏÉâÍ∏∞Îä•
  const handleSearch = async () => {
    const q = query(collection(db, "users"), where("email", "==", inputemail));
    try {
      const querySnapshot = await getDocs(q);
      querySnapshot.forEach(user => {
        setRsultUser(user.data());
      });
    } catch (err) {
      alert("Ïú†Ï†Ä Ï∞æÍ∏∞ Ïã§Ìå®! Ïù¥Î©îÏùºÏùÑ ÌôïÏù∏Ìï¥ Ï£ºÏÑ∏Ïöî");
      console.log(err);
    }
  };
  // ÏóîÌÑ∞ÌÇ§ ÌÅ¥Î¶≠ Í∞êÏßÄ Î∞è Í≤ÄÏÉâÍ∏∞Îä• Ïã§Ìñâ
  const handleKey = e => {
    e.code === "Enter" && handleSearch();
  };

  // Ï±ÑÌåÖÎ∞© Ï°¥Ïû¨Ïó¨Î∂Ä ÌôïÏù∏
  const chatExists = email =>
    chats?.find((chat: { users: string[] }) => {
      if (!chat.users) return false; // chat.usersÍ∞Ä undefinedÏù¥Î©¥ falseÎ•º Î∞òÌôò
      return (
        chat.users.includes(resultuser?.email) && chat.users.includes(email)
      );
    });

  // ÏÑ†ÌÉùÌïú Ïú†Ï†ÄÏôÄÏùò 1:1 Ï±ÑÌåÖÎ∞© Ï∂îÍ∞Ä,ÏÉùÏÑ±(chatlist)
  const handleAddList = async () => {
    if (
      !chatExists(resultuser.email) &&
      resultuser.email !== currentUser.email
    ) {
      await addDoc(collection(db, "chats"), {
        users: [currentUser.email, resultuser.email],
      });
    } else {
      setErrMsg("Ïù¥ÎØ∏ ÏÉùÏÑ±Îêú Ï±ÑÌåÖÎ∞© ÏûÖÎãàÎã§!");
      setTimeout(() => {
        setErrMsg("");
      }, 1000); //1Ï¥à ÌõÑÏóê errMsgÎ•º ÏßÄÏõÄ
    }
  };

  return (
    <div className="search-container">
      <div className="search_Form">
        <input
          type="text"
          placeholder="Ïú†Ï†ÄÍ≤ÄÏÉâ ÌõÑ 1:1 Ï±ÑÌåÖ ÏÉùÏÑ±ÌïòÍ∏∞"
          onChange={e => setInputemail(e.target.value)}
          onKeyDown={handleKey}
          ref={inputRef}
        />
        {errMsg && <p className="errMsg">{errMsg}</p>}
      </div>
      {/* Í≤ÄÏÉâ Í≤∞Í≥º */}
      {resultuser && (
        <div className="userList">
          <div
            onClick={() => {
              handleAddList();
            }}
          >{`üü° ${resultuser.email} `}</div>
        </div>
      )}
      <style jsx>{`
        .search-container {
          padding: 5px;
          margin-top: 7vh;
        }
        .search_Form {
          padding: 6px;
          font-size: 10px;
          width: 98%;
        }
        input {
          padding: 5px;
          width: 90%;
          border: none;
          border-bottom: 1.5px solid #777777;
          font-size: 13px;
        }
        input::placeholder {
          font-size: 11px;
          color: #373737;
        }
        .title {
          padding: 10px 5px;
          font-size: 13px;
          font-weight: 700;
          color: #000000;
        }
        .userList {
          padding: 10px;
          font-size: 13px;
          color: #000000;
          font-weight: 600;
          cursor: pointer;
          display: flex;
          flex-direction: column;
        }
        .userList:hover {
          background-color: #ffc6c6;
        }
        .errMsg {
          font-size: 10px;
          color: #f92f2f;
        }
      `}</style>
    </div>
  );
}

export default Search;
